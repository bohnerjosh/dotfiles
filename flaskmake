#!/bin/bash

if [[ $# -ne 1 ]]; then
    echo "usage: $0 <app-name>"
    exit 1
fi

if [[ -e $1 ]]; then
    read -p "$1 already exists. Do you want to overwrite (y/n)? " ans
    if [[ $ans == 'y' ]]; then
        rm -rf $1
    else
        exit 1
    fi
fi

mkdir $1
cd $1
virtualenv -p python3 env
cat >.env <<ENV_EOF
source env/bin/activate
export FLASK_PORT=8324
export FLASK_ENV=development
ENV_EOF

source .env
pip install flask
pip install Flask-SQLAlchemy
pip install SQLAlchemy
pip install requests
pip install pytest

cat >models.py <<MODELS_EOF
from appserver import db                                                        

# Example class
class User(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    username = db.Column(db.String(80), unique=True, nullable=False)
    email = db.Column(db.String(120), unique=False, nullable=False)

    def __repr__(self):
        return '<User %r>' % self.username
MODELS_EOF

cat >appserver.py <<SERVER_EOF
from flask import Flask, render_template, request, session, redirect, url_for, jsonify, abort
from flask_sqlalchemy import SQLAlchemy
import os 

app = Flask(__name__)
app.secret_key = b'ABCDEFG#(*JXKNCW:Q"vwads6it7y'

sqlite_uri = 'sqlite:///' + os.path.abspath(os.path.curdir) + '/test.db'
app.config['SQLALCHEMY_DATABASE_URI'] = sqlite_uri
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False
db = SQLAlchemy(app)

from models import User

@app.route('/')
def index():
    return 'Results of GET /'
SERVER_EOF
mkdir templates
mkdir -p static/js
mkdir static/css
mkdir static/img

echo "----------------------------"
echo "$1 created. To get started,"
echo "cd $1 && source .env"
echo "Then, to run your app,"
echo "flaskrun appserver.py"
